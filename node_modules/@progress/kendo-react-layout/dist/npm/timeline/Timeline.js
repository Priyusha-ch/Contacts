"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Timeline = void 0;
var React = require("react");
var PropTypes = require("prop-types");
var TimelineCard_1 = require("./TimelineCard");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var Timeline = function (props) {
    var collapsibleEvents = props.collapsibleEvents, className = props.className, alterMode = props.alterMode, horizontal = props.horizontal, events = props.events, dateFormat = props.dateFormat, onChange = props.onChange, onActionClick = props.onActionClick;
    var intl = (0, kendo_react_intl_1.useInternationalization)();
    var yearPoint = undefined;
    var setYearPoint = function (year) {
        yearPoint = year;
        return (React.createElement("li", { className: "k-timeline-flag-wrap" },
            React.createElement("span", { className: "k-timeline-flag" }, year)));
    };
    var timelineVertical = function () { return (React.createElement("ul", null, events.map(function (eventData, index) {
        return (React.createElement(React.Fragment, { key: index },
            yearPoint !== eventData.date.getFullYear() && setYearPoint(eventData.date.getFullYear()),
            React.createElement("li", { className: (0, kendo_react_common_1.classNames)('k-timeline-event', { 'k-reverse': index % 2 === 0 }) },
                React.createElement("div", { className: "k-timeline-date-wrap" },
                    React.createElement("span", { className: "k-timeline-date" }, intl.formatDate(eventData.date, dateFormat))),
                React.createElement("a", { className: "k-timeline-circle" }),
                React.createElement(TimelineCard_1.TimelineCard, { eventData: eventData, alternated: alterMode && index % 2 === 0, collapsible: collapsibleEvents, onChange: onChange, onActionClick: onActionClick }))));
    }))); };
    return (React.createElement("div", { className: (0, kendo_react_common_1.classNames)('k-timeline', 'k-timeline-collapsible', {
            'k-timeline-collapsible': collapsibleEvents,
            'k-timeline-vertical': !horizontal,
            'k-timeline-alternating': alterMode,
            'k-timeline-horizontal': horizontal
        }, className) }, timelineVertical()));
};
exports.Timeline = Timeline;
exports.Timeline.defaultProps = {
    alterMode: false,
    collapsibleEvents: false,
    dateFormat: 'MMM dd, yyyy'
};
exports.Timeline.propTypes = {
    className: PropTypes.string
};

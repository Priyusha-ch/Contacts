import * as React from 'react';
import * as PropTypes from 'prop-types';
import { TimelineCard } from './TimelineCard';
import { classNames } from '@progress/kendo-react-common';
import { useInternationalization } from '@progress/kendo-react-intl';
export var Timeline = function (props) {
    var collapsibleEvents = props.collapsibleEvents, className = props.className, alterMode = props.alterMode, horizontal = props.horizontal, events = props.events, dateFormat = props.dateFormat, onChange = props.onChange, onActionClick = props.onActionClick;
    var intl = useInternationalization();
    var yearPoint = undefined;
    var setYearPoint = function (year) {
        yearPoint = year;
        return (React.createElement("li", { className: "k-timeline-flag-wrap" },
            React.createElement("span", { className: "k-timeline-flag" }, year)));
    };
    var timelineVertical = function () { return (React.createElement("ul", null, events.map(function (eventData, index) {
        return (React.createElement(React.Fragment, { key: index },
            yearPoint !== eventData.date.getFullYear() && setYearPoint(eventData.date.getFullYear()),
            React.createElement("li", { className: classNames('k-timeline-event', { 'k-reverse': index % 2 === 0 }) },
                React.createElement("div", { className: "k-timeline-date-wrap" },
                    React.createElement("span", { className: "k-timeline-date" }, intl.formatDate(eventData.date, dateFormat))),
                React.createElement("a", { className: "k-timeline-circle" }),
                React.createElement(TimelineCard, { eventData: eventData, alternated: alterMode && index % 2 === 0, collapsible: collapsibleEvents, onChange: onChange, onActionClick: onActionClick }))));
    }))); };
    return (React.createElement("div", { className: classNames('k-timeline', 'k-timeline-collapsible', {
            'k-timeline-collapsible': collapsibleEvents,
            'k-timeline-vertical': !horizontal,
            'k-timeline-alternating': alterMode,
            'k-timeline-horizontal': horizontal
        }, className) }, timelineVertical()));
};
Timeline.defaultProps = {
    alterMode: false,
    collapsibleEvents: false,
    dateFormat: 'MMM dd, yyyy'
};
Timeline.propTypes = {
    className: PropTypes.string
};
